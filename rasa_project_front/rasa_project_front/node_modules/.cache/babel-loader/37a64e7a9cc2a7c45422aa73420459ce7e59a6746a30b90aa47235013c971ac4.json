{"ast":null,"code":"import { epsilon, splitter, resulterrbound, estimate, vec, sum, sum_three, scale, negate } from './util.js';\nconst isperrboundA = (16 + 224 * epsilon) * epsilon;\nconst isperrboundB = (5 + 72 * epsilon) * epsilon;\nconst isperrboundC = (71 + 1408 * epsilon) * epsilon * epsilon;\nconst ab = vec(4);\nconst bc = vec(4);\nconst cd = vec(4);\nconst de = vec(4);\nconst ea = vec(4);\nconst ac = vec(4);\nconst bd = vec(4);\nconst ce = vec(4);\nconst da = vec(4);\nconst eb = vec(4);\nconst abc = vec(24);\nconst bcd = vec(24);\nconst cde = vec(24);\nconst dea = vec(24);\nconst eab = vec(24);\nconst abd = vec(24);\nconst bce = vec(24);\nconst cda = vec(24);\nconst deb = vec(24);\nconst eac = vec(24);\nconst adet = vec(1152);\nconst bdet = vec(1152);\nconst cdet = vec(1152);\nconst ddet = vec(1152);\nconst edet = vec(1152);\nconst abdet = vec(2304);\nconst cddet = vec(2304);\nconst cdedet = vec(3456);\nconst deter = vec(5760);\nconst _8 = vec(8);\nconst _8b = vec(8);\nconst _8c = vec(8);\nconst _16 = vec(16);\nconst _24 = vec(24);\nconst _48 = vec(48);\nconst _48b = vec(48);\nconst _96 = vec(96);\nconst _192 = vec(192);\nconst _384x = vec(384);\nconst _384y = vec(384);\nconst _384z = vec(384);\nconst _768 = vec(768);\nfunction sum_three_scale(a, b, c, az, bz, cz, out) {\n  return sum_three(scale(4, a, az, _8), _8, scale(4, b, bz, _8b), _8b, scale(4, c, cz, _8c), _8c, _16, out);\n}\nfunction liftexact(alen, a, blen, b, clen, c, dlen, d, x, y, z, out) {\n  const len = sum(sum(alen, a, blen, b, _48), _48, negate(sum(clen, c, dlen, d, _48b), _48b), _48b, _96);\n  return sum_three(scale(scale(len, _96, x, _192), _192, x, _384x), _384x, scale(scale(len, _96, y, _192), _192, y, _384y), _384y, scale(scale(len, _96, z, _192), _192, z, _384z), _384z, _768, out);\n}\nfunction insphereexact(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez) {\n  let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\n  s1 = ax * by;\n  c = splitter * ax;\n  ahi = c - (c - ax);\n  alo = ax - ahi;\n  c = splitter * by;\n  bhi = c - (c - by);\n  blo = by - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = bx * ay;\n  c = splitter * bx;\n  ahi = c - (c - bx);\n  alo = bx - ahi;\n  c = splitter * ay;\n  bhi = c - (c - ay);\n  blo = ay - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  ab[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  ab[3] = u3;\n  s1 = bx * cy;\n  c = splitter * bx;\n  ahi = c - (c - bx);\n  alo = bx - ahi;\n  c = splitter * cy;\n  bhi = c - (c - cy);\n  blo = cy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = cx * by;\n  c = splitter * cx;\n  ahi = c - (c - cx);\n  alo = cx - ahi;\n  c = splitter * by;\n  bhi = c - (c - by);\n  blo = by - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  bc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  bc[3] = u3;\n  s1 = cx * dy;\n  c = splitter * cx;\n  ahi = c - (c - cx);\n  alo = cx - ahi;\n  c = splitter * dy;\n  bhi = c - (c - dy);\n  blo = dy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = dx * cy;\n  c = splitter * dx;\n  ahi = c - (c - dx);\n  alo = dx - ahi;\n  c = splitter * cy;\n  bhi = c - (c - cy);\n  blo = cy - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  cd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  cd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  cd[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  cd[3] = u3;\n  s1 = dx * ey;\n  c = splitter * dx;\n  ahi = c - (c - dx);\n  alo = dx - ahi;\n  c = splitter * ey;\n  bhi = c - (c - ey);\n  blo = ey - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = ex * dy;\n  c = splitter * ex;\n  ahi = c - (c - ex);\n  alo = ex - ahi;\n  c = splitter * dy;\n  bhi = c - (c - dy);\n  blo = dy - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  de[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  de[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  de[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  de[3] = u3;\n  s1 = ex * ay;\n  c = splitter * ex;\n  ahi = c - (c - ex);\n  alo = ex - ahi;\n  c = splitter * ay;\n  bhi = c - (c - ay);\n  blo = ay - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = ax * ey;\n  c = splitter * ax;\n  ahi = c - (c - ax);\n  alo = ax - ahi;\n  c = splitter * ey;\n  bhi = c - (c - ey);\n  blo = ey - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ea[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ea[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  ea[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  ea[3] = u3;\n  s1 = ax * cy;\n  c = splitter * ax;\n  ahi = c - (c - ax);\n  alo = ax - ahi;\n  c = splitter * cy;\n  bhi = c - (c - cy);\n  blo = cy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = cx * ay;\n  c = splitter * cx;\n  ahi = c - (c - cx);\n  alo = cx - ahi;\n  c = splitter * ay;\n  bhi = c - (c - ay);\n  blo = ay - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ac[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ac[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  ac[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  ac[3] = u3;\n  s1 = bx * dy;\n  c = splitter * bx;\n  ahi = c - (c - bx);\n  alo = bx - ahi;\n  c = splitter * dy;\n  bhi = c - (c - dy);\n  blo = dy - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = dx * by;\n  c = splitter * dx;\n  ahi = c - (c - dx);\n  alo = dx - ahi;\n  c = splitter * by;\n  bhi = c - (c - by);\n  blo = by - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  bd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  bd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  bd[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  bd[3] = u3;\n  s1 = cx * ey;\n  c = splitter * cx;\n  ahi = c - (c - cx);\n  alo = cx - ahi;\n  c = splitter * ey;\n  bhi = c - (c - ey);\n  blo = ey - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = ex * cy;\n  c = splitter * ex;\n  ahi = c - (c - ex);\n  alo = ex - ahi;\n  c = splitter * cy;\n  bhi = c - (c - cy);\n  blo = cy - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ce[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ce[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  ce[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  ce[3] = u3;\n  s1 = dx * ay;\n  c = splitter * dx;\n  ahi = c - (c - dx);\n  alo = dx - ahi;\n  c = splitter * ay;\n  bhi = c - (c - ay);\n  blo = ay - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = ax * dy;\n  c = splitter * ax;\n  ahi = c - (c - ax);\n  alo = ax - ahi;\n  c = splitter * dy;\n  bhi = c - (c - dy);\n  blo = dy - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  da[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  da[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  da[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  da[3] = u3;\n  s1 = ex * by;\n  c = splitter * ex;\n  ahi = c - (c - ex);\n  alo = ex - ahi;\n  c = splitter * by;\n  bhi = c - (c - by);\n  blo = by - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = bx * ey;\n  c = splitter * bx;\n  ahi = c - (c - bx);\n  alo = bx - ahi;\n  c = splitter * ey;\n  bhi = c - (c - ey);\n  blo = ey - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  eb[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  eb[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  u3 = _j + _i;\n  bvirt = u3 - _j;\n  eb[2] = _j - (u3 - bvirt) + (_i - bvirt);\n  eb[3] = u3;\n  const abclen = sum_three_scale(ab, bc, ac, cz, az, -bz, abc);\n  const bcdlen = sum_three_scale(bc, cd, bd, dz, bz, -cz, bcd);\n  const cdelen = sum_three_scale(cd, de, ce, ez, cz, -dz, cde);\n  const dealen = sum_three_scale(de, ea, da, az, dz, -ez, dea);\n  const eablen = sum_three_scale(ea, ab, eb, bz, ez, -az, eab);\n  const abdlen = sum_three_scale(ab, bd, da, dz, az, bz, abd);\n  const bcelen = sum_three_scale(bc, ce, eb, ez, bz, cz, bce);\n  const cdalen = sum_three_scale(cd, da, ac, az, cz, dz, cda);\n  const deblen = sum_three_scale(de, eb, bd, bz, dz, ez, deb);\n  const eaclen = sum_three_scale(ea, ac, ce, cz, ez, az, eac);\n  const deterlen = sum_three(liftexact(cdelen, cde, bcelen, bce, deblen, deb, bcdlen, bcd, ax, ay, az, adet), adet, liftexact(dealen, dea, cdalen, cda, eaclen, eac, cdelen, cde, bx, by, bz, bdet), bdet, sum_three(liftexact(eablen, eab, deblen, deb, abdlen, abd, dealen, dea, cx, cy, cz, cdet), cdet, liftexact(abclen, abc, eaclen, eac, bcelen, bce, eablen, eab, dx, dy, dz, ddet), ddet, liftexact(bcdlen, bcd, abdlen, abd, cdalen, cda, abclen, abc, ex, ey, ez, edet), edet, cddet, cdedet), cdedet, abdet, deter);\n  return deter[deterlen - 1];\n}\nconst xdet = vec(96);\nconst ydet = vec(96);\nconst zdet = vec(96);\nconst fin = vec(1152);\nfunction liftadapt(a, b, c, az, bz, cz, x, y, z, out) {\n  const len = sum_three_scale(a, b, c, az, bz, cz, _24);\n  return sum_three(scale(scale(len, _24, x, _48), _48, x, xdet), xdet, scale(scale(len, _24, y, _48), _48, y, ydet), ydet, scale(scale(len, _24, z, _48), _48, z, zdet), zdet, _192, out);\n}\nfunction insphereadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez, permanent) {\n  let ab3, bc3, cd3, da3, ac3, bd3;\n  let aextail, bextail, cextail, dextail;\n  let aeytail, beytail, ceytail, deytail;\n  let aeztail, beztail, ceztail, deztail;\n  let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0;\n  const aex = ax - ex;\n  const bex = bx - ex;\n  const cex = cx - ex;\n  const dex = dx - ex;\n  const aey = ay - ey;\n  const bey = by - ey;\n  const cey = cy - ey;\n  const dey = dy - ey;\n  const aez = az - ez;\n  const bez = bz - ez;\n  const cez = cz - ez;\n  const dez = dz - ez;\n  s1 = aex * bey;\n  c = splitter * aex;\n  ahi = c - (c - aex);\n  alo = aex - ahi;\n  c = splitter * bey;\n  bhi = c - (c - bey);\n  blo = bey - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = bex * aey;\n  c = splitter * bex;\n  ahi = c - (c - bex);\n  alo = bex - ahi;\n  c = splitter * aey;\n  bhi = c - (c - aey);\n  blo = aey - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  ab3 = _j + _i;\n  bvirt = ab3 - _j;\n  ab[2] = _j - (ab3 - bvirt) + (_i - bvirt);\n  ab[3] = ab3;\n  s1 = bex * cey;\n  c = splitter * bex;\n  ahi = c - (c - bex);\n  alo = bex - ahi;\n  c = splitter * cey;\n  bhi = c - (c - cey);\n  blo = cey - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = cex * bey;\n  c = splitter * cex;\n  ahi = c - (c - cex);\n  alo = cex - ahi;\n  c = splitter * bey;\n  bhi = c - (c - bey);\n  blo = bey - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  bc3 = _j + _i;\n  bvirt = bc3 - _j;\n  bc[2] = _j - (bc3 - bvirt) + (_i - bvirt);\n  bc[3] = bc3;\n  s1 = cex * dey;\n  c = splitter * cex;\n  ahi = c - (c - cex);\n  alo = cex - ahi;\n  c = splitter * dey;\n  bhi = c - (c - dey);\n  blo = dey - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = dex * cey;\n  c = splitter * dex;\n  ahi = c - (c - dex);\n  alo = dex - ahi;\n  c = splitter * cey;\n  bhi = c - (c - cey);\n  blo = cey - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  cd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  cd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  cd3 = _j + _i;\n  bvirt = cd3 - _j;\n  cd[2] = _j - (cd3 - bvirt) + (_i - bvirt);\n  cd[3] = cd3;\n  s1 = dex * aey;\n  c = splitter * dex;\n  ahi = c - (c - dex);\n  alo = dex - ahi;\n  c = splitter * aey;\n  bhi = c - (c - aey);\n  blo = aey - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = aex * dey;\n  c = splitter * aex;\n  ahi = c - (c - aex);\n  alo = aex - ahi;\n  c = splitter * dey;\n  bhi = c - (c - dey);\n  blo = dey - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  da[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  da[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  da3 = _j + _i;\n  bvirt = da3 - _j;\n  da[2] = _j - (da3 - bvirt) + (_i - bvirt);\n  da[3] = da3;\n  s1 = aex * cey;\n  c = splitter * aex;\n  ahi = c - (c - aex);\n  alo = aex - ahi;\n  c = splitter * cey;\n  bhi = c - (c - cey);\n  blo = cey - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = cex * aey;\n  c = splitter * cex;\n  ahi = c - (c - cex);\n  alo = cex - ahi;\n  c = splitter * aey;\n  bhi = c - (c - aey);\n  blo = aey - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  ac[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  ac[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  ac3 = _j + _i;\n  bvirt = ac3 - _j;\n  ac[2] = _j - (ac3 - bvirt) + (_i - bvirt);\n  ac[3] = ac3;\n  s1 = bex * dey;\n  c = splitter * bex;\n  ahi = c - (c - bex);\n  alo = bex - ahi;\n  c = splitter * dey;\n  bhi = c - (c - dey);\n  blo = dey - bhi;\n  s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n  t1 = dex * bey;\n  c = splitter * dex;\n  ahi = c - (c - dex);\n  alo = dex - ahi;\n  c = splitter * bey;\n  bhi = c - (c - bey);\n  blo = bey - bhi;\n  t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n  _i = s0 - t0;\n  bvirt = s0 - _i;\n  bd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n  _j = s1 + _i;\n  bvirt = _j - s1;\n  _0 = s1 - (_j - bvirt) + (_i - bvirt);\n  _i = _0 - t1;\n  bvirt = _0 - _i;\n  bd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n  bd3 = _j + _i;\n  bvirt = bd3 - _j;\n  bd[2] = _j - (bd3 - bvirt) + (_i - bvirt);\n  bd[3] = bd3;\n  const finlen = sum(sum(negate(liftadapt(bc, cd, bd, dez, bez, -cez, aex, aey, aez, adet), adet), adet, liftadapt(cd, da, ac, aez, cez, dez, bex, bey, bez, bdet), bdet, abdet), abdet, sum(negate(liftadapt(da, ab, bd, bez, dez, aez, cex, cey, cez, cdet), cdet), cdet, liftadapt(ab, bc, ac, cez, aez, -bez, dex, dey, dez, ddet), ddet, cddet), cddet, fin);\n  let det = estimate(finlen, fin);\n  let errbound = isperrboundB * permanent;\n  if (det >= errbound || -det >= errbound) {\n    return det;\n  }\n  bvirt = ax - aex;\n  aextail = ax - (aex + bvirt) + (bvirt - ex);\n  bvirt = ay - aey;\n  aeytail = ay - (aey + bvirt) + (bvirt - ey);\n  bvirt = az - aez;\n  aeztail = az - (aez + bvirt) + (bvirt - ez);\n  bvirt = bx - bex;\n  bextail = bx - (bex + bvirt) + (bvirt - ex);\n  bvirt = by - bey;\n  beytail = by - (bey + bvirt) + (bvirt - ey);\n  bvirt = bz - bez;\n  beztail = bz - (bez + bvirt) + (bvirt - ez);\n  bvirt = cx - cex;\n  cextail = cx - (cex + bvirt) + (bvirt - ex);\n  bvirt = cy - cey;\n  ceytail = cy - (cey + bvirt) + (bvirt - ey);\n  bvirt = cz - cez;\n  ceztail = cz - (cez + bvirt) + (bvirt - ez);\n  bvirt = dx - dex;\n  dextail = dx - (dex + bvirt) + (bvirt - ex);\n  bvirt = dy - dey;\n  deytail = dy - (dey + bvirt) + (bvirt - ey);\n  bvirt = dz - dez;\n  deztail = dz - (dez + bvirt) + (bvirt - ez);\n  if (aextail === 0 && aeytail === 0 && aeztail === 0 && bextail === 0 && beytail === 0 && beztail === 0 && cextail === 0 && ceytail === 0 && ceztail === 0 && dextail === 0 && deytail === 0 && deztail === 0) {\n    return det;\n  }\n  errbound = isperrboundC * permanent + resulterrbound * Math.abs(det);\n  const abeps = aex * beytail + bey * aextail - (aey * bextail + bex * aeytail);\n  const bceps = bex * ceytail + cey * bextail - (bey * cextail + cex * beytail);\n  const cdeps = cex * deytail + dey * cextail - (cey * dextail + dex * ceytail);\n  const daeps = dex * aeytail + aey * dextail - (dey * aextail + aex * deytail);\n  const aceps = aex * ceytail + cey * aextail - (aey * cextail + cex * aeytail);\n  const bdeps = bex * deytail + dey * bextail - (bey * dextail + dex * beytail);\n  det += (bex * bex + bey * bey + bez * bez) * (cez * daeps + dez * aceps + aez * cdeps + (ceztail * da3 + deztail * ac3 + aeztail * cd3)) + (dex * dex + dey * dey + dez * dez) * (aez * bceps - bez * aceps + cez * abeps + (aeztail * bc3 - beztail * ac3 + ceztail * ab3)) - ((aex * aex + aey * aey + aez * aez) * (bez * cdeps - cez * bdeps + dez * bceps + (beztail * cd3 - ceztail * bd3 + deztail * bc3)) + (cex * cex + cey * cey + cez * cez) * (dez * abeps + aez * bdeps + bez * daeps + (deztail * ab3 + aeztail * bd3 + beztail * da3))) + 2 * ((bex * bextail + bey * beytail + bez * beztail) * (cez * da3 + dez * ac3 + aez * cd3) + (dex * dextail + dey * deytail + dez * deztail) * (aez * bc3 - bez * ac3 + cez * ab3) - ((aex * aextail + aey * aeytail + aez * aeztail) * (bez * cd3 - cez * bd3 + dez * bc3) + (cex * cextail + cey * ceytail + cez * ceztail) * (dez * ab3 + aez * bd3 + bez * da3)));\n  if (det >= errbound || -det >= errbound) {\n    return det;\n  }\n  return insphereexact(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez);\n}\nexport function insphere(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez) {\n  const aex = ax - ex;\n  const bex = bx - ex;\n  const cex = cx - ex;\n  const dex = dx - ex;\n  const aey = ay - ey;\n  const bey = by - ey;\n  const cey = cy - ey;\n  const dey = dy - ey;\n  const aez = az - ez;\n  const bez = bz - ez;\n  const cez = cz - ez;\n  const dez = dz - ez;\n  const aexbey = aex * bey;\n  const bexaey = bex * aey;\n  const ab = aexbey - bexaey;\n  const bexcey = bex * cey;\n  const cexbey = cex * bey;\n  const bc = bexcey - cexbey;\n  const cexdey = cex * dey;\n  const dexcey = dex * cey;\n  const cd = cexdey - dexcey;\n  const dexaey = dex * aey;\n  const aexdey = aex * dey;\n  const da = dexaey - aexdey;\n  const aexcey = aex * cey;\n  const cexaey = cex * aey;\n  const ac = aexcey - cexaey;\n  const bexdey = bex * dey;\n  const dexbey = dex * bey;\n  const bd = bexdey - dexbey;\n  const alift = aex * aex + aey * aey + aez * aez;\n  const blift = bex * bex + bey * bey + bez * bez;\n  const clift = cex * cex + cey * cey + cez * cez;\n  const dlift = dex * dex + dey * dey + dez * dez;\n  const det = clift * (dez * ab + aez * bd + bez * da) - dlift * (aez * bc - bez * ac + cez * ab) + (alift * (bez * cd - cez * bd + dez * bc) - blift * (cez * da + dez * ac + aez * cd));\n  const aezplus = Math.abs(aez);\n  const bezplus = Math.abs(bez);\n  const cezplus = Math.abs(cez);\n  const dezplus = Math.abs(dez);\n  const aexbeyplus = Math.abs(aexbey) + Math.abs(bexaey);\n  const bexceyplus = Math.abs(bexcey) + Math.abs(cexbey);\n  const cexdeyplus = Math.abs(cexdey) + Math.abs(dexcey);\n  const dexaeyplus = Math.abs(dexaey) + Math.abs(aexdey);\n  const aexceyplus = Math.abs(aexcey) + Math.abs(cexaey);\n  const bexdeyplus = Math.abs(bexdey) + Math.abs(dexbey);\n  const permanent = (cexdeyplus * bezplus + bexdeyplus * cezplus + bexceyplus * dezplus) * alift + (dexaeyplus * cezplus + aexceyplus * dezplus + cexdeyplus * aezplus) * blift + (aexbeyplus * dezplus + bexdeyplus * aezplus + dexaeyplus * bezplus) * clift + (bexceyplus * aezplus + aexceyplus * bezplus + aexbeyplus * cezplus) * dlift;\n  const errbound = isperrboundA * permanent;\n  if (det > errbound || -det > errbound) {\n    return det;\n  }\n  return -insphereadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez, permanent);\n}\nexport function inspherefast(pax, pay, paz, pbx, pby, pbz, pcx, pcy, pcz, pdx, pdy, pdz, pex, pey, pez) {\n  const aex = pax - pex;\n  const bex = pbx - pex;\n  const cex = pcx - pex;\n  const dex = pdx - pex;\n  const aey = pay - pey;\n  const bey = pby - pey;\n  const cey = pcy - pey;\n  const dey = pdy - pey;\n  const aez = paz - pez;\n  const bez = pbz - pez;\n  const cez = pcz - pez;\n  const dez = pdz - pez;\n  const ab = aex * bey - bex * aey;\n  const bc = bex * cey - cex * bey;\n  const cd = cex * dey - dex * cey;\n  const da = dex * aey - aex * dey;\n  const ac = aex * cey - cex * aey;\n  const bd = bex * dey - dex * bey;\n  const abc = aez * bc - bez * ac + cez * ab;\n  const bcd = bez * cd - cez * bd + dez * bc;\n  const cda = cez * da + dez * ac + aez * cd;\n  const dab = dez * ab + aez * bd + bez * da;\n  const alift = aex * aex + aey * aey + aez * aez;\n  const blift = bex * bex + bey * bey + bez * bez;\n  const clift = cex * cex + cey * cey + cez * cez;\n  const dlift = dex * dex + dey * dey + dez * dez;\n  return clift * dab - dlift * abc + (alift * bcd - blift * cda);\n}","map":{"version":3,"names":["epsilon","splitter","resulterrbound","estimate","vec","sum","sum_three","scale","negate","isperrboundA","isperrboundB","isperrboundC","ab","bc","cd","de","ea","ac","bd","ce","da","eb","abc","bcd","cde","dea","eab","abd","bce","cda","deb","eac","adet","bdet","cdet","ddet","edet","abdet","cddet","cdedet","deter","_8","_8b","_8c","_16","_24","_48","_48b","_96","_192","_384x","_384y","_384z","_768","sum_three_scale","a","b","c","az","bz","cz","out","liftexact","alen","blen","clen","dlen","d","x","y","z","len","insphereexact","ax","ay","bx","by","cx","cy","dx","dy","dz","ex","ey","ez","bvirt","ahi","alo","bhi","blo","_i","_j","_0","s1","s0","t1","t0","u3","abclen","bcdlen","cdelen","dealen","eablen","abdlen","bcelen","cdalen","deblen","eaclen","deterlen","xdet","ydet","zdet","fin","liftadapt","insphereadapt","permanent","ab3","bc3","cd3","da3","ac3","bd3","aextail","bextail","cextail","dextail","aeytail","beytail","ceytail","deytail","aeztail","beztail","ceztail","deztail","aex","bex","cex","dex","aey","bey","cey","dey","aez","bez","cez","dez","finlen","det","errbound","Math","abs","abeps","bceps","cdeps","daeps","aceps","bdeps","insphere","aexbey","bexaey","bexcey","cexbey","cexdey","dexcey","dexaey","aexdey","aexcey","cexaey","bexdey","dexbey","alift","blift","clift","dlift","aezplus","bezplus","cezplus","dezplus","aexbeyplus","bexceyplus","cexdeyplus","dexaeyplus","aexceyplus","bexdeyplus","inspherefast","pax","pay","paz","pbx","pby","pbz","pcx","pcy","pcz","pdx","pdy","pdz","pex","pey","pez","dab"],"sources":["D:/python/rasa_project_for_windows/rasa_project_front/node_modules/robust-predicates/esm/insphere.js"],"sourcesContent":["import {epsilon, splitter, resulterrbound, estimate, vec, sum, sum_three, scale, negate} from './util.js';\n\nconst isperrboundA = (16 + 224 * epsilon) * epsilon;\nconst isperrboundB = (5 + 72 * epsilon) * epsilon;\nconst isperrboundC = (71 + 1408 * epsilon) * epsilon * epsilon;\n\nconst ab = vec(4);\nconst bc = vec(4);\nconst cd = vec(4);\nconst de = vec(4);\nconst ea = vec(4);\nconst ac = vec(4);\nconst bd = vec(4);\nconst ce = vec(4);\nconst da = vec(4);\nconst eb = vec(4);\n\nconst abc = vec(24);\nconst bcd = vec(24);\nconst cde = vec(24);\nconst dea = vec(24);\nconst eab = vec(24);\nconst abd = vec(24);\nconst bce = vec(24);\nconst cda = vec(24);\nconst deb = vec(24);\nconst eac = vec(24);\n\nconst adet = vec(1152);\nconst bdet = vec(1152);\nconst cdet = vec(1152);\nconst ddet = vec(1152);\nconst edet = vec(1152);\nconst abdet = vec(2304);\nconst cddet = vec(2304);\nconst cdedet = vec(3456);\nconst deter = vec(5760);\n\nconst _8 = vec(8);\nconst _8b = vec(8);\nconst _8c = vec(8);\nconst _16 = vec(16);\nconst _24 = vec(24);\nconst _48 = vec(48);\nconst _48b = vec(48);\nconst _96 = vec(96);\nconst _192 = vec(192);\nconst _384x = vec(384);\nconst _384y = vec(384);\nconst _384z = vec(384);\nconst _768 = vec(768);\n\nfunction sum_three_scale(a, b, c, az, bz, cz, out) {\n    return sum_three(\n        scale(4, a, az, _8), _8,\n        scale(4, b, bz, _8b), _8b,\n        scale(4, c, cz, _8c), _8c, _16, out);\n}\n\nfunction liftexact(alen, a, blen, b, clen, c, dlen, d, x, y, z, out) {\n    const len = sum(\n        sum(alen, a, blen, b, _48), _48,\n        negate(sum(clen, c, dlen, d, _48b), _48b), _48b, _96);\n\n    return sum_three(\n        scale(scale(len, _96, x, _192), _192, x, _384x), _384x,\n        scale(scale(len, _96, y, _192), _192, y, _384y), _384y,\n        scale(scale(len, _96, z, _192), _192, z, _384z), _384z, _768, out);\n}\n\nfunction insphereexact(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez) {\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0, u3;\n\n    s1 = ax * by;\n    c = splitter * ax;\n    ahi = c - (c - ax);\n    alo = ax - ahi;\n    c = splitter * by;\n    bhi = c - (c - by);\n    blo = by - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = bx * ay;\n    c = splitter * bx;\n    ahi = c - (c - bx);\n    alo = bx - ahi;\n    c = splitter * ay;\n    bhi = c - (c - ay);\n    blo = ay - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ab[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ab[3] = u3;\n    s1 = bx * cy;\n    c = splitter * bx;\n    ahi = c - (c - bx);\n    alo = bx - ahi;\n    c = splitter * cy;\n    bhi = c - (c - cy);\n    blo = cy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cx * by;\n    c = splitter * cx;\n    ahi = c - (c - cx);\n    alo = cx - ahi;\n    c = splitter * by;\n    bhi = c - (c - by);\n    blo = by - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    bc[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    bc[3] = u3;\n    s1 = cx * dy;\n    c = splitter * cx;\n    ahi = c - (c - cx);\n    alo = cx - ahi;\n    c = splitter * dy;\n    bhi = c - (c - dy);\n    blo = dy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = dx * cy;\n    c = splitter * dx;\n    ahi = c - (c - dx);\n    alo = dx - ahi;\n    c = splitter * cy;\n    bhi = c - (c - cy);\n    blo = cy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    cd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    cd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    cd[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    cd[3] = u3;\n    s1 = dx * ey;\n    c = splitter * dx;\n    ahi = c - (c - dx);\n    alo = dx - ahi;\n    c = splitter * ey;\n    bhi = c - (c - ey);\n    blo = ey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = ex * dy;\n    c = splitter * ex;\n    ahi = c - (c - ex);\n    alo = ex - ahi;\n    c = splitter * dy;\n    bhi = c - (c - dy);\n    blo = dy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    de[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    de[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    de[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    de[3] = u3;\n    s1 = ex * ay;\n    c = splitter * ex;\n    ahi = c - (c - ex);\n    alo = ex - ahi;\n    c = splitter * ay;\n    bhi = c - (c - ay);\n    blo = ay - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = ax * ey;\n    c = splitter * ax;\n    ahi = c - (c - ax);\n    alo = ax - ahi;\n    c = splitter * ey;\n    bhi = c - (c - ey);\n    blo = ey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ea[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ea[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ea[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ea[3] = u3;\n    s1 = ax * cy;\n    c = splitter * ax;\n    ahi = c - (c - ax);\n    alo = ax - ahi;\n    c = splitter * cy;\n    bhi = c - (c - cy);\n    blo = cy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cx * ay;\n    c = splitter * cx;\n    ahi = c - (c - cx);\n    alo = cx - ahi;\n    c = splitter * ay;\n    bhi = c - (c - ay);\n    blo = ay - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ac[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ac[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ac[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ac[3] = u3;\n    s1 = bx * dy;\n    c = splitter * bx;\n    ahi = c - (c - bx);\n    alo = bx - ahi;\n    c = splitter * dy;\n    bhi = c - (c - dy);\n    blo = dy - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = dx * by;\n    c = splitter * dx;\n    ahi = c - (c - dx);\n    alo = dx - ahi;\n    c = splitter * by;\n    bhi = c - (c - by);\n    blo = by - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    bd[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    bd[3] = u3;\n    s1 = cx * ey;\n    c = splitter * cx;\n    ahi = c - (c - cx);\n    alo = cx - ahi;\n    c = splitter * ey;\n    bhi = c - (c - ey);\n    blo = ey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = ex * cy;\n    c = splitter * ex;\n    ahi = c - (c - ex);\n    alo = ex - ahi;\n    c = splitter * cy;\n    bhi = c - (c - cy);\n    blo = cy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ce[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ce[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    ce[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    ce[3] = u3;\n    s1 = dx * ay;\n    c = splitter * dx;\n    ahi = c - (c - dx);\n    alo = dx - ahi;\n    c = splitter * ay;\n    bhi = c - (c - ay);\n    blo = ay - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = ax * dy;\n    c = splitter * ax;\n    ahi = c - (c - ax);\n    alo = ax - ahi;\n    c = splitter * dy;\n    bhi = c - (c - dy);\n    blo = dy - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    da[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    da[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    da[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    da[3] = u3;\n    s1 = ex * by;\n    c = splitter * ex;\n    ahi = c - (c - ex);\n    alo = ex - ahi;\n    c = splitter * by;\n    bhi = c - (c - by);\n    blo = by - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = bx * ey;\n    c = splitter * bx;\n    ahi = c - (c - bx);\n    alo = bx - ahi;\n    c = splitter * ey;\n    bhi = c - (c - ey);\n    blo = ey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    eb[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    eb[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    u3 = _j + _i;\n    bvirt = u3 - _j;\n    eb[2] = _j - (u3 - bvirt) + (_i - bvirt);\n    eb[3] = u3;\n\n    const abclen = sum_three_scale(ab, bc, ac, cz, az, -bz, abc);\n    const bcdlen = sum_three_scale(bc, cd, bd, dz, bz, -cz, bcd);\n    const cdelen = sum_three_scale(cd, de, ce, ez, cz, -dz, cde);\n    const dealen = sum_three_scale(de, ea, da, az, dz, -ez, dea);\n    const eablen = sum_three_scale(ea, ab, eb, bz, ez, -az, eab);\n    const abdlen = sum_three_scale(ab, bd, da, dz, az, bz, abd);\n    const bcelen = sum_three_scale(bc, ce, eb, ez, bz, cz, bce);\n    const cdalen = sum_three_scale(cd, da, ac, az, cz, dz, cda);\n    const deblen = sum_three_scale(de, eb, bd, bz, dz, ez, deb);\n    const eaclen = sum_three_scale(ea, ac, ce, cz, ez, az, eac);\n\n    const deterlen = sum_three(\n        liftexact(cdelen, cde, bcelen, bce, deblen, deb, bcdlen, bcd, ax, ay, az, adet), adet,\n        liftexact(dealen, dea, cdalen, cda, eaclen, eac, cdelen, cde, bx, by, bz, bdet), bdet,\n        sum_three(\n            liftexact(eablen, eab, deblen, deb, abdlen, abd, dealen, dea, cx, cy, cz, cdet), cdet,\n            liftexact(abclen, abc, eaclen, eac, bcelen, bce, eablen, eab, dx, dy, dz, ddet), ddet,\n            liftexact(bcdlen, bcd, abdlen, abd, cdalen, cda, abclen, abc, ex, ey, ez, edet), edet, cddet, cdedet), cdedet, abdet, deter);\n\n    return deter[deterlen - 1];\n}\n\nconst xdet = vec(96);\nconst ydet = vec(96);\nconst zdet = vec(96);\nconst fin = vec(1152);\n\nfunction liftadapt(a, b, c, az, bz, cz, x, y, z, out) {\n    const len = sum_three_scale(a, b, c, az, bz, cz, _24);\n    return sum_three(\n        scale(scale(len, _24, x, _48), _48, x, xdet), xdet,\n        scale(scale(len, _24, y, _48), _48, y, ydet), ydet,\n        scale(scale(len, _24, z, _48), _48, z, zdet), zdet, _192, out);\n}\n\nfunction insphereadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez, permanent) {\n    let ab3, bc3, cd3, da3, ac3, bd3;\n\n    let aextail, bextail, cextail, dextail;\n    let aeytail, beytail, ceytail, deytail;\n    let aeztail, beztail, ceztail, deztail;\n\n    let bvirt, c, ahi, alo, bhi, blo, _i, _j, _0, s1, s0, t1, t0;\n\n    const aex = ax - ex;\n    const bex = bx - ex;\n    const cex = cx - ex;\n    const dex = dx - ex;\n    const aey = ay - ey;\n    const bey = by - ey;\n    const cey = cy - ey;\n    const dey = dy - ey;\n    const aez = az - ez;\n    const bez = bz - ez;\n    const cez = cz - ez;\n    const dez = dz - ez;\n\n    s1 = aex * bey;\n    c = splitter * aex;\n    ahi = c - (c - aex);\n    alo = aex - ahi;\n    c = splitter * bey;\n    bhi = c - (c - bey);\n    blo = bey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = bex * aey;\n    c = splitter * bex;\n    ahi = c - (c - bex);\n    alo = bex - ahi;\n    c = splitter * aey;\n    bhi = c - (c - aey);\n    blo = aey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ab[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ab[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    ab3 = _j + _i;\n    bvirt = ab3 - _j;\n    ab[2] = _j - (ab3 - bvirt) + (_i - bvirt);\n    ab[3] = ab3;\n    s1 = bex * cey;\n    c = splitter * bex;\n    ahi = c - (c - bex);\n    alo = bex - ahi;\n    c = splitter * cey;\n    bhi = c - (c - cey);\n    blo = cey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cex * bey;\n    c = splitter * cex;\n    ahi = c - (c - cex);\n    alo = cex - ahi;\n    c = splitter * bey;\n    bhi = c - (c - bey);\n    blo = bey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bc[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bc[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    bc3 = _j + _i;\n    bvirt = bc3 - _j;\n    bc[2] = _j - (bc3 - bvirt) + (_i - bvirt);\n    bc[3] = bc3;\n    s1 = cex * dey;\n    c = splitter * cex;\n    ahi = c - (c - cex);\n    alo = cex - ahi;\n    c = splitter * dey;\n    bhi = c - (c - dey);\n    blo = dey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = dex * cey;\n    c = splitter * dex;\n    ahi = c - (c - dex);\n    alo = dex - ahi;\n    c = splitter * cey;\n    bhi = c - (c - cey);\n    blo = cey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    cd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    cd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    cd3 = _j + _i;\n    bvirt = cd3 - _j;\n    cd[2] = _j - (cd3 - bvirt) + (_i - bvirt);\n    cd[3] = cd3;\n    s1 = dex * aey;\n    c = splitter * dex;\n    ahi = c - (c - dex);\n    alo = dex - ahi;\n    c = splitter * aey;\n    bhi = c - (c - aey);\n    blo = aey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = aex * dey;\n    c = splitter * aex;\n    ahi = c - (c - aex);\n    alo = aex - ahi;\n    c = splitter * dey;\n    bhi = c - (c - dey);\n    blo = dey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    da[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    da[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    da3 = _j + _i;\n    bvirt = da3 - _j;\n    da[2] = _j - (da3 - bvirt) + (_i - bvirt);\n    da[3] = da3;\n    s1 = aex * cey;\n    c = splitter * aex;\n    ahi = c - (c - aex);\n    alo = aex - ahi;\n    c = splitter * cey;\n    bhi = c - (c - cey);\n    blo = cey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = cex * aey;\n    c = splitter * cex;\n    ahi = c - (c - cex);\n    alo = cex - ahi;\n    c = splitter * aey;\n    bhi = c - (c - aey);\n    blo = aey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    ac[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    ac[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    ac3 = _j + _i;\n    bvirt = ac3 - _j;\n    ac[2] = _j - (ac3 - bvirt) + (_i - bvirt);\n    ac[3] = ac3;\n    s1 = bex * dey;\n    c = splitter * bex;\n    ahi = c - (c - bex);\n    alo = bex - ahi;\n    c = splitter * dey;\n    bhi = c - (c - dey);\n    blo = dey - bhi;\n    s0 = alo * blo - (s1 - ahi * bhi - alo * bhi - ahi * blo);\n    t1 = dex * bey;\n    c = splitter * dex;\n    ahi = c - (c - dex);\n    alo = dex - ahi;\n    c = splitter * bey;\n    bhi = c - (c - bey);\n    blo = bey - bhi;\n    t0 = alo * blo - (t1 - ahi * bhi - alo * bhi - ahi * blo);\n    _i = s0 - t0;\n    bvirt = s0 - _i;\n    bd[0] = s0 - (_i + bvirt) + (bvirt - t0);\n    _j = s1 + _i;\n    bvirt = _j - s1;\n    _0 = s1 - (_j - bvirt) + (_i - bvirt);\n    _i = _0 - t1;\n    bvirt = _0 - _i;\n    bd[1] = _0 - (_i + bvirt) + (bvirt - t1);\n    bd3 = _j + _i;\n    bvirt = bd3 - _j;\n    bd[2] = _j - (bd3 - bvirt) + (_i - bvirt);\n    bd[3] = bd3;\n\n    const finlen = sum(\n        sum(\n            negate(liftadapt(bc, cd, bd, dez, bez, -cez, aex, aey, aez, adet), adet), adet,\n            liftadapt(cd, da, ac, aez, cez, dez, bex, bey, bez, bdet), bdet, abdet), abdet,\n        sum(\n            negate(liftadapt(da, ab, bd, bez, dez, aez, cex, cey, cez, cdet), cdet), cdet,\n            liftadapt(ab, bc, ac, cez, aez, -bez, dex, dey, dez, ddet), ddet, cddet), cddet, fin);\n\n    let det = estimate(finlen, fin);\n    let errbound = isperrboundB * permanent;\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    bvirt = ax - aex;\n    aextail = ax - (aex + bvirt) + (bvirt - ex);\n    bvirt = ay - aey;\n    aeytail = ay - (aey + bvirt) + (bvirt - ey);\n    bvirt = az - aez;\n    aeztail = az - (aez + bvirt) + (bvirt - ez);\n    bvirt = bx - bex;\n    bextail = bx - (bex + bvirt) + (bvirt - ex);\n    bvirt = by - bey;\n    beytail = by - (bey + bvirt) + (bvirt - ey);\n    bvirt = bz - bez;\n    beztail = bz - (bez + bvirt) + (bvirt - ez);\n    bvirt = cx - cex;\n    cextail = cx - (cex + bvirt) + (bvirt - ex);\n    bvirt = cy - cey;\n    ceytail = cy - (cey + bvirt) + (bvirt - ey);\n    bvirt = cz - cez;\n    ceztail = cz - (cez + bvirt) + (bvirt - ez);\n    bvirt = dx - dex;\n    dextail = dx - (dex + bvirt) + (bvirt - ex);\n    bvirt = dy - dey;\n    deytail = dy - (dey + bvirt) + (bvirt - ey);\n    bvirt = dz - dez;\n    deztail = dz - (dez + bvirt) + (bvirt - ez);\n    if (aextail === 0 && aeytail === 0 && aeztail === 0 &&\n        bextail === 0 && beytail === 0 && beztail === 0 &&\n        cextail === 0 && ceytail === 0 && ceztail === 0 &&\n        dextail === 0 && deytail === 0 && deztail === 0) {\n        return det;\n    }\n\n    errbound = isperrboundC * permanent + resulterrbound * Math.abs(det);\n\n    const abeps = (aex * beytail + bey * aextail) - (aey * bextail + bex * aeytail);\n    const bceps = (bex * ceytail + cey * bextail) - (bey * cextail + cex * beytail);\n    const cdeps = (cex * deytail + dey * cextail) - (cey * dextail + dex * ceytail);\n    const daeps = (dex * aeytail + aey * dextail) - (dey * aextail + aex * deytail);\n    const aceps = (aex * ceytail + cey * aextail) - (aey * cextail + cex * aeytail);\n    const bdeps = (bex * deytail + dey * bextail) - (bey * dextail + dex * beytail);\n    det +=\n        (((bex * bex + bey * bey + bez * bez) * ((cez * daeps + dez * aceps + aez * cdeps) +\n        (ceztail * da3 + deztail * ac3 + aeztail * cd3)) + (dex * dex + dey * dey + dez * dez) *\n        ((aez * bceps - bez * aceps + cez * abeps) + (aeztail * bc3 - beztail * ac3 + ceztail * ab3))) -\n        ((aex * aex + aey * aey + aez * aez) * ((bez * cdeps - cez * bdeps + dez * bceps) +\n        (beztail * cd3 - ceztail * bd3 + deztail * bc3)) + (cex * cex + cey * cey + cez * cez) *\n        ((dez * abeps + aez * bdeps + bez * daeps) + (deztail * ab3 + aeztail * bd3 + beztail * da3)))) +\n        2 * (((bex * bextail + bey * beytail + bez * beztail) * (cez * da3 + dez * ac3 + aez * cd3) +\n        (dex * dextail + dey * deytail + dez * deztail) * (aez * bc3 - bez * ac3 + cez * ab3)) -\n        ((aex * aextail + aey * aeytail + aez * aeztail) * (bez * cd3 - cez * bd3 + dez * bc3) +\n        (cex * cextail + cey * ceytail + cez * ceztail) * (dez * ab3 + aez * bd3 + bez * da3)));\n\n    if (det >= errbound || -det >= errbound) {\n        return det;\n    }\n\n    return insphereexact(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez);\n}\n\nexport function insphere(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez) {\n    const aex = ax - ex;\n    const bex = bx - ex;\n    const cex = cx - ex;\n    const dex = dx - ex;\n    const aey = ay - ey;\n    const bey = by - ey;\n    const cey = cy - ey;\n    const dey = dy - ey;\n    const aez = az - ez;\n    const bez = bz - ez;\n    const cez = cz - ez;\n    const dez = dz - ez;\n\n    const aexbey = aex * bey;\n    const bexaey = bex * aey;\n    const ab = aexbey - bexaey;\n    const bexcey = bex * cey;\n    const cexbey = cex * bey;\n    const bc = bexcey - cexbey;\n    const cexdey = cex * dey;\n    const dexcey = dex * cey;\n    const cd = cexdey - dexcey;\n    const dexaey = dex * aey;\n    const aexdey = aex * dey;\n    const da = dexaey - aexdey;\n    const aexcey = aex * cey;\n    const cexaey = cex * aey;\n    const ac = aexcey - cexaey;\n    const bexdey = bex * dey;\n    const dexbey = dex * bey;\n    const bd = bexdey - dexbey;\n\n    const alift = aex * aex + aey * aey + aez * aez;\n    const blift = bex * bex + bey * bey + bez * bez;\n    const clift = cex * cex + cey * cey + cez * cez;\n    const dlift = dex * dex + dey * dey + dez * dez;\n\n    const det =\n        (clift * (dez * ab + aez * bd + bez * da) - dlift * (aez * bc - bez * ac + cez * ab)) +\n        (alift * (bez * cd - cez * bd + dez * bc) - blift * (cez * da + dez * ac + aez * cd));\n\n    const aezplus = Math.abs(aez);\n    const bezplus = Math.abs(bez);\n    const cezplus = Math.abs(cez);\n    const dezplus = Math.abs(dez);\n    const aexbeyplus = Math.abs(aexbey) + Math.abs(bexaey);\n    const bexceyplus = Math.abs(bexcey) + Math.abs(cexbey);\n    const cexdeyplus = Math.abs(cexdey) + Math.abs(dexcey);\n    const dexaeyplus = Math.abs(dexaey) + Math.abs(aexdey);\n    const aexceyplus = Math.abs(aexcey) + Math.abs(cexaey);\n    const bexdeyplus = Math.abs(bexdey) + Math.abs(dexbey);\n    const permanent =\n        (cexdeyplus * bezplus + bexdeyplus * cezplus + bexceyplus * dezplus) * alift +\n        (dexaeyplus * cezplus + aexceyplus * dezplus + cexdeyplus * aezplus) * blift +\n        (aexbeyplus * dezplus + bexdeyplus * aezplus + dexaeyplus * bezplus) * clift +\n        (bexceyplus * aezplus + aexceyplus * bezplus + aexbeyplus * cezplus) * dlift;\n\n    const errbound = isperrboundA * permanent;\n    if (det > errbound || -det > errbound) {\n        return det;\n    }\n    return -insphereadapt(ax, ay, az, bx, by, bz, cx, cy, cz, dx, dy, dz, ex, ey, ez, permanent);\n}\n\nexport function inspherefast(pax, pay, paz, pbx, pby, pbz, pcx, pcy, pcz, pdx, pdy, pdz, pex, pey, pez) {\n    const aex = pax - pex;\n    const bex = pbx - pex;\n    const cex = pcx - pex;\n    const dex = pdx - pex;\n    const aey = pay - pey;\n    const bey = pby - pey;\n    const cey = pcy - pey;\n    const dey = pdy - pey;\n    const aez = paz - pez;\n    const bez = pbz - pez;\n    const cez = pcz - pez;\n    const dez = pdz - pez;\n\n    const ab = aex * bey - bex * aey;\n    const bc = bex * cey - cex * bey;\n    const cd = cex * dey - dex * cey;\n    const da = dex * aey - aex * dey;\n    const ac = aex * cey - cex * aey;\n    const bd = bex * dey - dex * bey;\n\n    const abc = aez * bc - bez * ac + cez * ab;\n    const bcd = bez * cd - cez * bd + dez * bc;\n    const cda = cez * da + dez * ac + aez * cd;\n    const dab = dez * ab + aez * bd + bez * da;\n\n    const alift = aex * aex + aey * aey + aez * aez;\n    const blift = bex * bex + bey * bey + bez * bez;\n    const clift = cex * cex + cey * cey + cez * cez;\n    const dlift = dex * dex + dey * dey + dez * dez;\n\n    return (clift * dab - dlift * abc) + (alift * bcd - blift * cda);\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}