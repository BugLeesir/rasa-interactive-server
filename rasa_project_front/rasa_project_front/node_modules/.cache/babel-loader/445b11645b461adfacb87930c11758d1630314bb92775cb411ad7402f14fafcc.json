{"ast":null,"code":"import axios from \"axios\";\nimport Highcharts from \"highcharts\";\nimport * as d3 from \"d3\";\nexport default {\n  name: \"Charts\",\n  methods: {\n    fetchData() {\n      axios.get(\"/charts/get_water_flow_data\").then(response => {\n        const data = response.data;\n        const waterLevelData = data.map(item => [item.time, item.water_level]);\n        const flowRateData = data.map(item => [item.time, item.flow_rate]);\n        Highcharts.chart(\"waterFlowChart\", {\n          title: {\n            text: \"水位流量关系线\"\n          },\n          xAxis: {\n            title: {\n              text: \"Time\"\n            }\n          },\n          yAxis: {\n            title: {\n              text: \"Value\"\n            }\n          },\n          series: [{\n            name: \"Water Level\",\n            data: waterLevelData\n          }, {\n            name: \"Flow Rate\",\n            data: flowRateData\n          }]\n        });\n      }).catch(error => {\n        console.log(\"获取数据失败：\" + error);\n      });\n    },\n    fetchGraphData() {\n      axios.post(\"/charts/get_graph_data\").then(response => {\n        this.drawGraph(response.data);\n      }).catch(error => {\n        console.log(\"获取知识图谱数据失败：\" + error);\n      });\n    },\n    drawGraph(graphData) {\n      const svg = d3.select(this.$refs.graphContainer);\n    }\n  },\n  mounted() {\n    this.fetchData();\n  }\n};","map":{"version":3,"names":["axios","Highcharts","d3","name","methods","fetchData","get","then","response","data","waterLevelData","map","item","time","water_level","flowRateData","flow_rate","chart","title","text","xAxis","yAxis","series","catch","error","console","log","fetchGraphData","post","drawGraph","graphData","svg","select","$refs","graphContainer","mounted"],"sources":["src/components/Charts.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"box-card-left\">\r\n      <el-card class=\"box-card\">\r\n        <div id=\"waterFlowChart\"></div>\r\n      </el-card>\r\n    </div>\r\n    <div class=\"box-card-right\">\r\n      <el-card class=\"box-card\">\r\n        <svg ref=\"graphContainer\"></svg>\r\n      </el-card>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport Highcharts from \"highcharts\"\r\nimport * as d3 from \"d3\"\r\n\r\nexport default {\r\n  name: \"Charts\",\r\n  methods:{\r\n    fetchData(){\r\n      axios.get(\"/charts/get_water_flow_data\")\r\n          .then(response => {\r\n            const data = response.data\r\n\r\n            const waterLevelData=data.map(item=>[item.time,item.water_level])\r\n            const flowRateData=data.map(item=>[item.time,item.flow_rate])\r\n\r\n            Highcharts.chart(\"waterFlowChart\",{\r\n              title:{\r\n                text:\"水位流量关系线\"\r\n              },\r\n              xAxis:{\r\n                title:{\r\n                  text:\"Time\"\r\n                }\r\n              },\r\n              yAxis:{\r\n                title:{\r\n                  text:\"Value\"\r\n                }\r\n              },\r\n              series:[{\r\n                name:\"Water Level\",\r\n                data:waterLevelData\r\n              },{\r\n                name:\"Flow Rate\",\r\n                data: flowRateData\r\n              }]\r\n            })\r\n          })\r\n          .catch(error=>{\r\n            console.log(\"获取数据失败：\"+error)\r\n          })\r\n    },\r\n    fetchGraphData(){\r\n      axios.post(\"/charts/get_graph_data\")\r\n          .then(response => {\r\n            this.drawGraph(response.data)\r\n          })\r\n          .catch(error => {\r\n            console.log(\"获取知识图谱数据失败：\"+error)\r\n          })\r\n    },\r\n    drawGraph(graphData){\r\n      const svg = d3.select(this.$refs.graphContainer)\r\n    }\r\n  },\r\n  mounted() {\r\n    this.fetchData()\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n  div{\r\n    height:80vh;\r\n    .box-card-left{\r\n      float:left;\r\n      width: 48%;\r\n      height:100%;\r\n      margin-right:20px;\r\n    }\r\n    .box-card-right{\r\n      float:left;\r\n      width:50%;\r\n\r\n    }\r\n  }\r\n</style>"],"mappings":"AAgBA,OAAAA,KAAA;AACA,OAAAC,UAAA;AACA,YAAAC,EAAA;AAEA;EACAC,IAAA;EACAC,OAAA;IACAC,UAAA;MACAL,KAAA,CAAAM,GAAA,gCACAC,IAAA,CAAAC,QAAA;QACA,MAAAC,IAAA,GAAAD,QAAA,CAAAC,IAAA;QAEA,MAAAC,cAAA,GAAAD,IAAA,CAAAE,GAAA,CAAAC,IAAA,KAAAA,IAAA,CAAAC,IAAA,EAAAD,IAAA,CAAAE,WAAA;QACA,MAAAC,YAAA,GAAAN,IAAA,CAAAE,GAAA,CAAAC,IAAA,KAAAA,IAAA,CAAAC,IAAA,EAAAD,IAAA,CAAAI,SAAA;QAEAf,UAAA,CAAAgB,KAAA;UACAC,KAAA;YACAC,IAAA;UACA;UACAC,KAAA;YACAF,KAAA;cACAC,IAAA;YACA;UACA;UACAE,KAAA;YACAH,KAAA;cACAC,IAAA;YACA;UACA;UACAG,MAAA;YACAnB,IAAA;YACAM,IAAA,EAAAC;UACA;YACAP,IAAA;YACAM,IAAA,EAAAM;UACA;QACA;MACA,GACAQ,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAC,GAAA,aAAAF,KAAA;MACA;IACA;IACAG,eAAA;MACA3B,KAAA,CAAA4B,IAAA,2BACArB,IAAA,CAAAC,QAAA;QACA,KAAAqB,SAAA,CAAArB,QAAA,CAAAC,IAAA;MACA,GACAc,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAC,GAAA,iBAAAF,KAAA;MACA;IACA;IACAK,UAAAC,SAAA;MACA,MAAAC,GAAA,GAAA7B,EAAA,CAAA8B,MAAA,MAAAC,KAAA,CAAAC,cAAA;IACA;EACA;EACAC,QAAA;IACA,KAAA9B,SAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}