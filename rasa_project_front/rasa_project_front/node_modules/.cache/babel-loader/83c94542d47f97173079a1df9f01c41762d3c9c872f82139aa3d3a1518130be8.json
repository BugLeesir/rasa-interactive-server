{"ast":null,"code":"import axios from \"axios\";\nimport Highcharts from \"highcharts\";\nimport * as d3 from \"d3\";\nexport default {\n  name: \"Charts\",\n  methods: {\n    fetchGraphData() {\n      axios.post(\"/charts/get_graph_data\").then(response => {\n        this.drawGraph(response.data);\n      }).catch(error => {\n        console.log(\"获取知识图谱数据失败：\" + error);\n      });\n    },\n    drawGraph(graphData) {\n      const svg = d3.select(this.$refs.graphContainer);\n\n      // 清空现有的 SVG 内容\n      svg.selectAll('*').remove();\n\n      // 设置 SVG 尺寸\n      const width = 900;\n      const height = 800;\n      svg.attr('width', width).attr('height', height);\n\n      // 创建箭头\n      svg.append('defs').selectAll('marker').data(['arrow']) // 定义箭头的名称\n      .enter().append('marker').attr('id', d => d).attr('viewBox', '0 -5 10 10').attr('refX', 20) // 控制箭头位置\n      .attr('refY', 0).attr('markerWidth', 6).attr('markerHeight', 6).attr('orient', 'auto') // 根据路径自动定向箭头\n      .append('path').attr('d', 'M0,-5L10,0L0,5').attr('class', 'arrowhead'); // 自定义箭头的样式\n\n      const simulation = this.setupSimulation(graphData.nodes, graphData.edges);\n    }\n  },\n  mounted() {\n    this.fetchGraphData();\n  }\n};","map":{"version":3,"names":["axios","Highcharts","d3","name","methods","fetchGraphData","post","then","response","drawGraph","data","catch","error","console","log","graphData","svg","select","$refs","graphContainer","selectAll","remove","width","height","attr","append","enter","d","simulation","setupSimulation","nodes","edges","mounted"],"sources":["src/components/KnowledgeGraph.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-card class=\"box-card\">\r\n            <!-- SVG容器 -->\r\n      <svg ref=\"graphContainer\"></svg>\r\n    </el-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nimport Highcharts from \"highcharts\"\r\nimport * as d3 from \"d3\"\r\n\r\nexport default {\r\n  name: \"Charts\",\r\n  methods: {\r\n    fetchGraphData() {\r\n      axios.post(\"/charts/get_graph_data\")\r\n          .then(response => {\r\n            this.drawGraph(response.data)\r\n          })\r\n          .catch(error => {\r\n            console.log(\"获取知识图谱数据失败：\" + error)\r\n          })\r\n      },\r\n      drawGraph(graphData) {\r\n        const svg = d3.select(this.$refs.graphContainer);\r\n\r\n        // 清空现有的 SVG 内容\r\n        svg.selectAll('*').remove();\r\n\r\n        // 设置 SVG 尺寸\r\n        const width = 900;\r\n        const height = 800;\r\n        svg.attr('width', width).attr('height', height);\r\n\r\n        // 创建箭头\r\n        svg.append('defs').selectAll('marker')\r\n            .data(['arrow']) // 定义箭头的名称\r\n            .enter().append('marker')\r\n            .attr('id', d => d)\r\n            .attr('viewBox', '0 -5 10 10')\r\n            .attr('refX', 20) // 控制箭头位置\r\n            .attr('refY', 0)\r\n            .attr('markerWidth', 6)\r\n            .attr('markerHeight', 6)\r\n            .attr('orient', 'auto') // 根据路径自动定向箭头\r\n            .append('path')\r\n            .attr('d', 'M0,-5L10,0L0,5')\r\n            .attr('class', 'arrowhead'); // 自定义箭头的样式\r\n\r\n        const simulation=this.setupSimulation(graphData.nodes,graphData.edges)\r\n      }\r\n  },\r\n  mounted() {\r\n    this.fetchGraphData()\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n  div{\r\n    height:80vh;\r\n    .box-card{\r\n      width:100%;\r\n      height: 100%;\r\n      overflow: auto;\r\n    }\r\n\r\n    .link {\r\n      stroke: deepskyblue; /* 线段颜色 */\r\n      stroke-width: 2px; /* 线段宽度 */\r\n    }\r\n\r\n    .arrowhead {\r\n      fill: black; /* 箭头颜色 */\r\n    }\r\n\r\n\r\n    .node text {\r\n      font-size: 12px; /* 节点名称文本大小 */\r\n    }\r\n  }\r\n</style>"],"mappings":"AAUA,OAAAA,KAAA;AACA,OAAAC,UAAA;AACA,YAAAC,EAAA;AAEA;EACAC,IAAA;EACAC,OAAA;IACAC,eAAA;MACAL,KAAA,CAAAM,IAAA,2BACAC,IAAA,CAAAC,QAAA;QACA,KAAAC,SAAA,CAAAD,QAAA,CAAAE,IAAA;MACA,GACAC,KAAA,CAAAC,KAAA;QACAC,OAAA,CAAAC,GAAA,iBAAAF,KAAA;MACA;IACA;IACAH,UAAAM,SAAA;MACA,MAAAC,GAAA,GAAAd,EAAA,CAAAe,MAAA,MAAAC,KAAA,CAAAC,cAAA;;MAEA;MACAH,GAAA,CAAAI,SAAA,MAAAC,MAAA;;MAEA;MACA,MAAAC,KAAA;MACA,MAAAC,MAAA;MACAP,GAAA,CAAAQ,IAAA,UAAAF,KAAA,EAAAE,IAAA,WAAAD,MAAA;;MAEA;MACAP,GAAA,CAAAS,MAAA,SAAAL,SAAA,WACAV,IAAA;MAAA,CACAgB,KAAA,GAAAD,MAAA,WACAD,IAAA,OAAAG,CAAA,IAAAA,CAAA,EACAH,IAAA,0BACAA,IAAA;MAAA,CACAA,IAAA,YACAA,IAAA,mBACAA,IAAA,oBACAA,IAAA;MAAA,CACAC,MAAA,SACAD,IAAA,wBACAA,IAAA;;MAEA,MAAAI,UAAA,QAAAC,eAAA,CAAAd,SAAA,CAAAe,KAAA,EAAAf,SAAA,CAAAgB,KAAA;IACA;EACA;EACAC,QAAA;IACA,KAAA3B,cAAA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}