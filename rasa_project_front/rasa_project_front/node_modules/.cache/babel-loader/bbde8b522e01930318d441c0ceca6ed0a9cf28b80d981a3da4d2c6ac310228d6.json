{"ast":null,"code":"import defaultSource from \"./defaultSource.js\";\nimport normal from \"./normal.js\";\nexport default (function sourceRandomGamma(source) {\n  var randomNormal = normal.source(source)();\n  function randomGamma(k, theta) {\n    if ((k = +k) < 0) throw new RangeError(\"invalid k\");\n    // degenerate distribution if k === 0\n    if (k === 0) return () => 0;\n    theta = theta == null ? 1 : +theta;\n    // exponential distribution if k === 1\n    if (k === 1) return () => -Math.log1p(-source()) * theta;\n    var d = (k < 1 ? k + 1 : k) - 1 / 3,\n      c = 1 / (3 * Math.sqrt(d)),\n      multiplier = k < 1 ? () => Math.pow(source(), 1 / k) : () => 1;\n    return function () {\n      do {\n        do {\n          var x = randomNormal(),\n            v = 1 + c * x;\n        } while (v <= 0);\n        v *= v * v;\n        var u = 1 - source();\n      } while (u >= 1 - 0.0331 * x * x * x * x && Math.log(u) >= 0.5 * x * x + d * (1 - v + Math.log(v)));\n      return d * v * multiplier() * theta;\n    };\n  }\n  randomGamma.source = sourceRandomGamma;\n  return randomGamma;\n})(defaultSource);","map":{"version":3,"names":["defaultSource","normal","sourceRandomGamma","source","randomNormal","randomGamma","k","theta","RangeError","Math","log1p","d","c","sqrt","multiplier","pow","x","v","u","log"],"sources":["E:/MyCodes/Rasa/rasa_project_for_windows/rasa_project_front/rasa_project_front/node_modules/d3-random/src/gamma.js"],"sourcesContent":["import defaultSource from \"./defaultSource.js\";\nimport normal from \"./normal.js\";\n\nexport default (function sourceRandomGamma(source) {\n  var randomNormal = normal.source(source)();\n\n  function randomGamma(k, theta) {\n    if ((k = +k) < 0) throw new RangeError(\"invalid k\");\n    // degenerate distribution if k === 0\n    if (k === 0) return () => 0;\n    theta = theta == null ? 1 : +theta;\n    // exponential distribution if k === 1\n    if (k === 1) return () => -Math.log1p(-source()) * theta;\n\n    var d = (k < 1 ? k + 1 : k) - 1 / 3,\n        c = 1 / (3 * Math.sqrt(d)),\n        multiplier = k < 1 ? () => Math.pow(source(), 1 / k) : () => 1;\n    return function() {\n      do {\n        do {\n          var x = randomNormal(),\n              v = 1 + c * x;\n        } while (v <= 0);\n        v *= v * v;\n        var u = 1 - source();\n      } while (u >= 1 - 0.0331 * x * x * x * x && Math.log(u) >= 0.5 * x * x + d * (1 - v + Math.log(v)));\n      return d * v * multiplier() * theta;\n    };\n  }\n\n  randomGamma.source = sourceRandomGamma;\n\n  return randomGamma;\n})(defaultSource);\n"],"mappings":"AAAA,OAAOA,aAAa,MAAM,oBAAoB;AAC9C,OAAOC,MAAM,MAAM,aAAa;AAEhC,eAAe,CAAC,SAASC,iBAAiBA,CAACC,MAAM,EAAE;EACjD,IAAIC,YAAY,GAAGH,MAAM,CAACE,MAAM,CAACA,MAAM,CAAC,CAAC,CAAC;EAE1C,SAASE,WAAWA,CAACC,CAAC,EAAEC,KAAK,EAAE;IAC7B,IAAI,CAACD,CAAC,GAAG,CAACA,CAAC,IAAI,CAAC,EAAE,MAAM,IAAIE,UAAU,CAAC,WAAW,CAAC;IACnD;IACA,IAAIF,CAAC,KAAK,CAAC,EAAE,OAAO,MAAM,CAAC;IAC3BC,KAAK,GAAGA,KAAK,IAAI,IAAI,GAAG,CAAC,GAAG,CAACA,KAAK;IAClC;IACA,IAAID,CAAC,KAAK,CAAC,EAAE,OAAO,MAAM,CAACG,IAAI,CAACC,KAAK,CAAC,CAACP,MAAM,CAAC,CAAC,CAAC,GAAGI,KAAK;IAExD,IAAII,CAAC,GAAG,CAACL,CAAC,GAAG,CAAC,GAAGA,CAAC,GAAG,CAAC,GAAGA,CAAC,IAAI,CAAC,GAAG,CAAC;MAC/BM,CAAC,GAAG,CAAC,IAAI,CAAC,GAAGH,IAAI,CAACI,IAAI,CAACF,CAAC,CAAC,CAAC;MAC1BG,UAAU,GAAGR,CAAC,GAAG,CAAC,GAAG,MAAMG,IAAI,CAACM,GAAG,CAACZ,MAAM,CAAC,CAAC,EAAE,CAAC,GAAGG,CAAC,CAAC,GAAG,MAAM,CAAC;IAClE,OAAO,YAAW;MAChB,GAAG;QACD,GAAG;UACD,IAAIU,CAAC,GAAGZ,YAAY,CAAC,CAAC;YAClBa,CAAC,GAAG,CAAC,GAAGL,CAAC,GAAGI,CAAC;QACnB,CAAC,QAAQC,CAAC,IAAI,CAAC;QACfA,CAAC,IAAIA,CAAC,GAAGA,CAAC;QACV,IAAIC,CAAC,GAAG,CAAC,GAAGf,MAAM,CAAC,CAAC;MACtB,CAAC,QAAQe,CAAC,IAAI,CAAC,GAAG,MAAM,GAAGF,CAAC,GAAGA,CAAC,GAAGA,CAAC,GAAGA,CAAC,IAAIP,IAAI,CAACU,GAAG,CAACD,CAAC,CAAC,IAAI,GAAG,GAAGF,CAAC,GAAGA,CAAC,GAAGL,CAAC,IAAI,CAAC,GAAGM,CAAC,GAAGR,IAAI,CAACU,GAAG,CAACF,CAAC,CAAC,CAAC;MAClG,OAAON,CAAC,GAAGM,CAAC,GAAGH,UAAU,CAAC,CAAC,GAAGP,KAAK;IACrC,CAAC;EACH;EAEAF,WAAW,CAACF,MAAM,GAAGD,iBAAiB;EAEtC,OAAOG,WAAW;AACpB,CAAC,EAAEL,aAAa,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}